$rc = TRUE;
print "Executing test on address ", $addr, "\n";

$ret = sonata_db_create($addr, 0, "dbFromJx9", "unqlite", { path : "dbFromJx9" });
if($ret != TRUE) {
  print "sonata_db_create failed\n";
  $rc = FALSE;
  return;
}

$db = { database_name : "dbFromJx9",
        address : $addr,
        provider_id : 0 };

// Create a collection
$coll = sonata_coll_create($db, "mycollection");

$records = [
  { name : "John Lennon",     year : 1940 },
  { name : "Paul McCartney",  year : 1942 },
  { name : "George Harrison", year : 1943 },
  { name : "Peter Best",      year : 1941 } 
];

print "Testing sonata_store... ";
for($i = 0; $i < 4 ; $i++) {
  $id = sonata_store($coll, $records[$i]);
  if($id == NULL) {
    print "sonata_store failed\n";
    sonata_db_destroy($addr, 0, "dbFromJx9");
    $rc = FALSE;
    return;
  }
}
print "OK\n";

print "Testing sonata_fetch... ";
for($i = 0; $i < 4 ; $i++) {
  $r = sonata_fetch($coll, $i);
  if($r == NULL) {
    print "sonata_fetch failed\n";
    sonata_db_destroy($addr, 0, "dbFromJx9");
    $rc = FALSE;
    return;
  }
  if($r.name != $records[$i].name) {
    print "record field not matching\n";
    sonata_db_destroy($addr, 0, "dbFromJx9");
    $rc = FALSE;
    return;
  }
}
print "OK\n";

print "Testing sonata_all... ";
$r = sonata_all($coll);
if($r == NULL) {
  print "sonata_all failed\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
for($i = 0; $i < 4 ; $i++) {
  if($r[$i].name != $records[$i].name) {
     print "record field not matching\n";
     sonata_db_destroy($addr, 0, "dbFromJx9");
     $rc = FALSE;
     return;
  }
}
print "OK\n";

print "Testing sonata_filter... ";
function myfilter($member) {
   if($member.year > 1941) {
      return TRUE;
   } else {
      return FALSE;
   }
}
$filtered = sonata_filter($coll, myfilter);
if($filtered == NULL) {
  print "sonata_filter failed\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
if(count($filtered) != 2) {
  print "unexpected number of returned records\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
print "OK\n";

print "Testing sonata_size... ";
$size = sonata_size($coll);
if($size != 4) {
  print "sonata_size failed\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
print "OK\n";

print "Testing sonata_last_record_id... ";
$id = sonata_last_record_id($coll);
if($id != 3) {
  print "sonata_last_record_id failed\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
print "OK\n";

print "Testing sonata_update... ";
$ret = sonata_update($coll, 3, { "name" : "Ringo Starr", "year" : 1940 });
if($r == NULL) {
  print "sonata_update failed\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
$new_record = sonata_fetch($coll, 3);
if($new_record.name != "Ringo Starr") {
  print "recod not matching after update\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
print "OK\n";

print "Testing sonata_erase... ";
$ret = sonata_erase($coll, 0);
if($ret == NULL) {
  print "sonata_erase failed\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
$record0 = sonata_fetch($coll, 0);
if($record0 != NULL) {
  print "sonata_fetch returned a result when it shouldn't have\n";
  sonata_db_destroy($addr, 0, "dbFromJx9");
  $rc = FALSE;
  return;
}
print "OK\n";

print "Destroying database dbFromJx9\n";
$rc = sonata_db_destroy($addr, 0, "dbFromJx9");
if($rc != TRUE) {
  print "sonata_db_destroy failed\n";
  $rc = FALSE;
  return;
}
print "All done!";
